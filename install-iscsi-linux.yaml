---
- hosts: "{{ cloud_initiator }}"
  become: true
  gather_facts: yes
  vars:
    ansible_python_interpreter: auto

  tasks:
          #         - name: Wait until ansible intall is complete before continuing
          #           wait_for:
          #             path: /etc/ansible/ansible.cfg
          #             search_regex: defaults

         - name: Install open-iscsi package when Ubuntu
           apt: name=open-iscsi update_cache=yes state=latest force_apt_get=yes
           register: open_iscsi
           when: ansible_distribution_file_variety == 'Debian'

#        - debug:
#            var: open_iscsi

         - name: Install iscsi-initiator-utils when Amazon Linux 2
           yum:
             name: iscsi-initiator-utils
             state: latest
           register: iscsi_initiator_utils
           when:
             - ansible_distribution_file_variety == 'Amazon'
             - ansible_distribution_major_version == '2'

#        - debug:
#            var: iscsi_initiator_utils

         - name: Backup Current IQN
           shell:
             cmd: mv /etc/iscsi/initiatorname.iscsi /etc/iscsi/initiatorname.iscsi.backup

         - name: Generate Random IQN
           shell:
             cmd: echo "InitiatorName=`/sbin/iscsi-iname`" > /etc/iscsi/initiatorname.iscsi

         - name: Register New IQN
           shell:
             cmd: cat /etc/iscsi/initiatorname.iscsi | grep InitiatorName= | sed 's/=/ /' | awk '{print $2}'
           register: localiqn

         - set_fact:
             iqn: "{{ localiqn }}"
             cacheable: yes

         - name: "Print New IQN from hostvars"
           debug:
             msg: "{{ hostvars[inventory_hostname]['iqn']['stdout'] }}"

         - name: Restart iscsid service
           shell:
             cmd: systemctl restart iscsid.service
           register: iscsidrestart
           when: (ansible_distribution_file_variety == 'Debian') or
                 (ansible_distribution_file_variety == 'Amazon' and ansible_distribution_major_version == '2')

         - name: Print iscsid status
           shell:
             cmd: systemctl status iscsid.service
           register: iscsidstatus
           when: (ansible_distribution_file_variety == 'Debian') or
                 (ansible_distribution_file_variety == 'Amazon' and ansible_distribution_major_version == '2')

         - debug:
             var: iscsidstatus.stdout_lines
           when: (ansible_distribution_file_variety == 'Debian') or 
                 (ansible_distribution_file_variety == 'Amazon' and ansible_distribution_major_version == '2')
