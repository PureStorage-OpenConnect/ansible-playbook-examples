---
- name: FBServer_validation | Fail if given Flashblade server not exist for {{ outer_loop.key }}
  ansible.builtin.fail:
    msg: FB server {{ mount_details.server.fb_name }} not available
  when: mount_details.server.fb_name not in array_inventory
  delegate_to: localhost
  run_once: true

- name: Facts | Set fb_url and fb_token fact from array_inventory for {{ outer_loop.key }}
  ansible.builtin.set_fact:
    fb_url: "{{ array_inventory[mount_details.server.fb_name].fb_host }}"
    fb_token: "{{ array_secrets[mount_details.server.fb_name].api_token }}"
  no_log: true
  run_once: true

- name: Facts | Get information from {{ mount_details.server.fb_name }} for {{ outer_loop.key }}
  purestorage.flashblade.purefb_info:
    gather_subset:
      - network
    fb_url: "{{ fb_url }}"
    api_token: "{{ fb_token }}"
  delegate_to: localhost
  run_once: true
  become: false
  register: blade_info

- name: VIP_validation | Fail if data VIP not exist on {{ mount_details.server.fb_name }}
  ansible.builtin.fail:
    msg: data VIP {{ mount_details.server.datavip_name }} not available on FB server
  when: mount_details.server.datavip_name not in blade_info['purefb_info']['network']

- name: Mount | Mount File System for {{ outer_loop.key }}
  ansible.posix.mount:
    path: "{{ mount_details['client']['mount_point'] }}"
    state: mounted
    fstype: nfs
    opts: "{{ mount_details['client']['opts'] | default(omit) }}"
    src: "{{ blade_info['purefb_info']['network'][mount_details.server.datavip_name]['address'] }}:/{{ mount_details.server.fileshare }}"
  become: true
  when:
    - mount_details.client.hosts in group_names or mount_details.client.hosts == inventory_hostname or mount_details.client.hosts == ansible_hostname
    - mount_details.client.mount_state is not defined or mount_details.client.mount_state == 'mount'

- name: Unmount | Unmount File System for {{ outer_loop.key }}
  ansible.posix.mount:
    path: "{{ mount_details['client']['mount_point'] }}"
    state: absent
  become: true
  when:
    - mount_details.client.hosts in group_names or mount_details.client.hosts == inventory_hostname or mount_details.client.hosts == ansible_hostname
    - mount_details.client.mount_state is defined and mount_details.client.mount_state == 'umount'
