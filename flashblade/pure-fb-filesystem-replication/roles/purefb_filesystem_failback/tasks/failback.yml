---
- name: Facts | Combine array_inventory and array_secrets for {{ repl_loop.key }}
  ansible.builtin.set_fact:
    combined_inventory: "{{ array_inventory | combine(array_secrets, recursive=True) }}"
  no_log: true
  run_once: true
  delegate_to: localhost
  become: false

- name: Validation | Fail if source Flashblade server does not exist for {{ repl_loop.key }}
  ansible.builtin.fail:
    msg: FB server {{ repl_vars.src.fb_name }} not available
  when: repl_vars.src.fb_name not in array_inventory
  delegate_to: localhost
  run_once: true
  become: false

- name: Validation | Fail if target Flashblade server does not exist for {{ repl_loop.key }}
  ansible.builtin.fail:
    msg: FB server {{ repl_vars.dst.fb_name }} not available
  when: repl_vars.dst.fb_name not in array_inventory
  delegate_to: localhost
  run_once: true
  become: false

- name: Facts | Set source and target facts for {{ repl_loop.key }}
  ansible.builtin.set_fact:
    src_fb_url: "{{ array_inventory[repl_vars.src.fb_name].fb_host }}"
    src_fb_token: "{{ array_secrets[repl_vars.src.fb_name].api_token }}"
    dst_fb_url: "{{ array_inventory[repl_vars.dst.fb_name].fb_host }}"
    dst_fb_token: "{{ array_secrets[repl_vars.dst.fb_name].api_token }}"
  no_log: true
  delegate_to: localhost
  run_once: true
  become: false

- name: Check FlashBlade server reachability
  delegate_to: localhost
  run_once: true
  become: false

  block:
    - name: Validation | Check connectivity for source FBServer
      ansible.builtin.command: ping -q -c 4 -W 1 {{ src_fb_url }}
      register: src_ping_status
      failed_when: false
      changed_when: false

    - name: Validation | Fail if source Flashblade server not reachable
      ansible.builtin.fail:
        msg: Source FB server {{ src_fb_url }} not reachable
      when: "'100% packet loss' in src_ping_status.stdout"

    - name: Validation | Check connectivity for target FBServer
      ansible.builtin.command: ping -q -c 4 -W 1 {{ dst_fb_url }}
      register: dst_ping_status
      failed_when: false
      changed_when: false

    - name: Validation | Fail if target Flashblade server not reachable
      ansible.builtin.fail:
        msg: Target FB server {{ dst_fb_url }} not reachable
      when: "'100% packet loss' in dst_ping_status.stdout"
- name: Facts | Get information from src FB server for {{ repl_loop.key }}
  purestorage.flashblade.purefb_info:
    gather_subset:
      - minimum
      - replication
      - network
      - filesystems
    fb_url: "{{ src_fb_url }}"
    api_token: "{{ src_fb_token }}"
  run_once: true
  register: src_fb_info
  delegate_to: localhost
  become: false

- name: Facts | Get information from dst FB server for {{ repl_loop.key }}
  purestorage.flashblade.purefb_info:
    gather_subset:
      - minimum
      - replication
      - network
    fb_url: "{{ dst_fb_url }}"
    api_token: "{{ dst_fb_token }}"
  run_once: true
  register: dst_fb_info
  delegate_to: localhost
  become: false

- name: Facts | Set dst fileshare name for {{ repl_loop.key }}
  ansible.builtin.set_fact:
    dst_fileshare: "{{ repl_vars.dst.fileshare if repl_vars.dst.fileshare is defined else repl_vars.src.fileshare }}"
  delegate_to: localhost
  run_once: true
  become: false

- name: Facts | Set src fb name and dst fb name for {{ repl_loop.key }}
  ansible.builtin.set_fact:
    src_fb_name: "{{ src_fb_info.purefb_info.default.flashblade_name }}"
    dst_fb_name: "{{ dst_fb_info.purefb_info.default.flashblade_name }}"
    src_data_vip: "{{ src_fb_info.purefb_info.network[repl_vars.src.datavip_name].address }}"
    dst_data_vip: "{{ dst_fb_info.purefb_info.network[repl_vars.dst.datavip_name].address }}"
  delegate_to: localhost
  run_once: true
  become: false

- name: Filesystem | Stop writes on the promoted remote(dst) file system for {{ repl_loop.key }}
  purestorage.flashblade.purefb_fs:
    name: "{{ dst_fileshare }}"
    writable: false
    fb_url: "{{ dst_fb_url }}"
    api_token: "{{ dst_fb_token }}"
  delegate_to: localhost
  run_once: true
  become: false

- name: Filesystem | Promote the previously demoted local(src) file system for {{ repl_loop.key }}
  purestorage.flashblade.purefb_fs:
    name: "{{ dst_fileshare }}"
    promote: true
    fb_url: "{{ src_fb_url }}"
    api_token: "{{ src_fb_token }}"
  delegate_to: localhost
  run_once: true
  become: false

- name: Filesystem | Add back local(src) filesystem snapshot policy for {{ repl_loop.key }}
  purestorage.flashblade.purefb_fs:
    name: "{{ repl_vars.src.fileshare }}"
    policy: "{{ repl_vars.common_params.src_policy }}"
    policy_state: present
    fb_url: "{{ src_fb_url }}"
    api_token: "{{ src_fb_token }}"
  when: repl_vars.common_params.src_policy is defined
  delegate_to: localhost
  become: false
  run_once: true

- name: Mount | Unmout all the clients from remote(dst) and mount back to local(src) filesystem
  ansible.builtin.include_tasks: mount.yml
  loop: "{{ repl_vars.client_details }}"
  loop_control:
    loop_var: mount

- name: Filesystem | Demote remote(dst) file system for {{ repl_loop.key }}
  purestorage.flashblade.purefb_fs:
    name: "{{ dst_fileshare }}"
    promote: false
    discard_snaps: true
    fb_url: "{{ dst_fb_url }}"
    api_token: "{{ dst_fb_token }}"
  delegate_to: localhost
  register: demote_fs
  become: false
  run_once: true
